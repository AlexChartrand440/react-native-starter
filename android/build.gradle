buildscript {
  ext.kotlinVersion = '1.3.20'
  repositories {
    google()
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.3.1'
    classpath 'com.google.gms:google-services:4.2.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath 'com.google.firebase:firebase-plugins:1.1.5'
  }
}

allprojects {
  task downloadDependencies() {
    description 'Download all dependencies to the Gradle cache'
    doLast {
      configurations.findAll().each { config ->
        if (config.name.contains("minReactNative") && config.canBeResolved) {
          print config.name
          print '\n'
          config.files
        }
      }
    }
  }

  println "${project.name} ${projectDir} ${rootDir}"

  repositories {
    google()
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
      url "$rootDir/../node_modules/react-native/android"
    }
    maven {
      url "$rootDir/../node_modules/jsc-android/dist"
    }
    maven {
      url 'https://maven.google.com'
    }
    maven {
      url 'https://jitpack.io'
    }
  }

}

subprojects {
  task listAllDependencies(type: DependencyReportTask) {}
  ext {
    compileSdk = 28
    buildTools = "28.0.3"
    minSdk = 19
    targetSdk = 28
  }

  afterEvaluate { project ->
    if (!project.name.equalsIgnoreCase("app")
      && project.hasProperty("android")) {
      android {
        compileSdkVersion compileSdk
        buildToolsVersion buildTools
        defaultConfig {
          minSdkVersion minSdk
          targetSdkVersion targetSdk
        }
        variantFilter { variant ->
          def names = variant.flavors*.name
          if (names.contains("minReactNative44")) {
            setIgnore(true)
          }
          if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative57")) {
            setIgnore(true)
          }
        }
      }
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.10.2'
  distributionUrl = distributionUrl.replace("bin", "all")
}

// // Top-level build file where you can add configuration options common to all sub-projects/modules.

// project.ext {
//   minSdkVersion = 21
//   compileSdkVersion = 27
//   targetSdkVersion = 27
//   buildToolsVersion = '28.0.3'
// }

// buildscript {
//     ext.kotlinVersion = '1.3.0'

//     repositories {
//         google()
//         jcenter()
//         mavenLocal()
//         mavenCentral()
//     }
//     dependencies {
//         classpath 'com.android.tools.build:gradle:3.3.0'
//         classpath 'com.google.gms:google-services:4.2.0'
//         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
//         classpath 'com.google.firebase:firebase-plugins:1.1.5'

//         // NOTE: Do not place your application dependencies here; they belong
//         // in the individual module build.gradle files
//     }
// }

// allprojects {
//     repositories {
//         google()
//         jcenter()
//         mavenLocal()
//         mavenCentral()
//         maven {
//             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
//             url "$rootDir/../node_modules/react-native/android"
//         }
//         maven {
//             // Local Maven repo containing AARs with JSC library built for Android
//             url "$rootDir/../node_modules/jsc-android/dist"
//         }
//         maven {
//             url 'https://maven.google.com'
//         }
//         maven {
//           url 'https://jitpack.io'
//         }
//     }
// }

// subprojects {
//   task listAllDependencies(type: DependencyReportTask) {}

//   ext {
//     minSdk = 21
//     targetSdk = 27
//     compileSdk = 27
//     buildTools = "28.0.3"
//   }

//   afterEvaluate { project ->
//     if (!project.name.equalsIgnoreCase("app") && project.hasProperty("android")) {
//       android {
//         compileSdkVersion compileSdk
//         buildToolsVersion buildTools
//         defaultConfig {
//           minSdkVersion minSdk
//           targetSdkVersion targetSdk
//         }
//         variantFilter { variant ->
//           def names = variant.flavors*.name
//           if (names.contains("minReactNative44")) {
//             setIgnore(true)
//           }

//           if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative57")) {
//             setIgnore(true)
//           }
//         }
//       }
//     }
//   }
// }
